@using KursovaRabota.ViewModels.CompetitionVMs
@model CompetitionGetAllViewModel

<h1>Всички Състезания</h1>

@if (Model.Competitions.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Име</th>
                <th>Описание</th>
                <th>Предмет</th>
                <th>Тип</th>
                <th>Местоположение</th>
                <th>Брой Записани Участници</th>
                <th>Максимален Брой Участници</th>
                <th>Крайна Дата за Регистрация</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var competition in Model.Competitions)
            {
                <tr>
                    <td>@competition.Name</td>
                    <td>@competition.Description</td>
                    <td>@competition.Subject.SubjectName</td>
                    <td>@competition.CompetitionType.Type</td>
                    <td>@competition.Location</td>
                    <td>@competition.CurrentParticipants</td>
                    <td>@competition.MaxParticipants</td>
                    <td>@competition.RegistrationDeadline.ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (User.IsInRole("Admin") || User.IsInRole("Teacher"))
                        {
                            <form asp-controller="Competition" asp-action="GetAllUsers" method="get">
                                <input type="hidden" name="id" value="@competition.Id" />
                                <button type="submit" class="btn btn-primary">Преглед на Потребители</button>
                            </form>
                            <form asp-controller="Competition" asp-action="Update" method="get">
                                <input type="hidden" name="id" value="@competition.Id" />
                                <button type="submit" class="btn btn-secondary">Промяна на състезание</button>
                            </form>
                        }
                        @if (User.IsInRole("Admin"))
                        {
                            <form asp-controller="Competition" asp-action="Delete" method="post">
                                <input type="hidden" name="id" value="@competition.Id" />
                                <button type="submit" class="btn btn-danger">Деактивиране</button>
                            </form>
                        }
                        @if (User.IsInRole("Student"))
                        {
                            <form asp-controller="User" asp-action="Subscribe" method="post">
                                <input type="hidden" name="id" value="@competition.Id" />
                                <button type="submit" class="btn btn-primary">Записване</button>
                            </form>

                        }
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <form asp-action="GetAllForUser" asp-controller="Competition" method="get" id="paginationForm">

        <input type="hidden" name="pageNumber" id="pageNumberInput" value="@(Model.CurrentPage)" />
        <input type="hidden" name="pageSize" value="@(Model.PageSize)" />
        <div class="d-flex gap-2 justify-content-center">
            <div class="pagination d-flex gap-2">
                <div class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")" id="paginationPrevious" style="@(Model.CurrentPage == 1 ? "display:none;" : "")">
                    <a class="page-link border-0" href="javascript:void(0);" onclick="changePage(@(Model.CurrentPage - 1))">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="20" height="20"><path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z" /></svg>
                    </a>
                </div>
            </div>

            <div class="pagination d-flex gap-2" id="paginationList">
                <!-- Pagination numbers will be generated dynamically here -->
            </div>

            <div class="pagination d-flex gap-2">
                <div class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")" style="@(Model.CurrentPage == Model.TotalPages ? "display:none;" : "")">
                    <a class="page-link border-0" href="javascript:void(0);" onclick="changePage(@(Model.CurrentPage + 1))">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="20" height="20"><path d="M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z" /></svg>
                    </a>
                </div>
            </div>
        </div>
    </form>
}
else
{
    <p>Няма налични състезания.</p>
}

@section scripts
    {
    <script>
        function changePage(pageNumber) {
            document.getElementById("pageNumberInput").value = pageNumber;
            document.getElementById("paginationForm").submit();
        }
    </script>

    <script>
        function generatePaginationNumbers(currentPage, totalPages) {
            var paginationList = document.getElementById("paginationList");

            // Check if paginationList exists before proceeding
            if (!paginationList) {
                console.error("paginationList element not found.");
                return;
            }

            paginationList.innerHTML = ""; // Clear existing pagination items
            var startPage = Math.max(1, currentPage - 1);
            var endPage = Math.min(totalPages, startPage + 2);

            // If on the last page, adjust startPage and endPage accordingly
            if (endPage === totalPages) {
                startPage = Math.max(1, endPage - 2); // Ensure to show 3 pages
            }

            for (var i = startPage; i <= endPage; i++) {
                var listItem = document.createElement("li");
                listItem.className = "page-item " + (i === currentPage ? "active" : "");
                var link = document.createElement("a");
                link.className = "page-link btn btn-primary rounded-circle";
                link.href = "javascript:void(0);";
                link.textContent = i;
                link.setAttribute("onclick", "changePage(" + i + ")");
                listItem.appendChild(link);
                paginationList.appendChild(listItem);
            }
        }

        // Call the function initially only if currentPage and totalPages are defined
        if (@(ViewBag.CurrentPage) && @(ViewBag.TotalPages)) {
            generatePaginationNumbers(@(ViewBag.CurrentPage), @(ViewBag.TotalPages));
        } else {
            console.error("ViewBag.CurrentPage or ViewBag.TotalPages is null or undefined.");
        }
    </script>
}